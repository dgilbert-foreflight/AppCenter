// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.Legacy {
  public var updateCheck: UpdateCheck {
    UpdateCheck(path: path + "/updateCheck")
  }

  public struct UpdateCheck {
    /// Path: `/v0.1/legacy/updateCheck`
    public let path: String

    /// Check for updates
    public func get(parameters: GetParameters? = nil) -> Request<[String: AnyJSON]> {
      Request(method: "GET", url: path, query: parameters?.asQuery, id: "legacyCodePushAcquisition_updateCheck")
    }

    public struct GetParameters {
      public var deploymentKey: String?
      public var appVersion: String?
      public var packageHash: String?
      public var label: String?
      public var clientUniqueID: String?
      public var isCompanion: String?

      public init(deploymentKey: String? = nil, appVersion: String? = nil, packageHash: String? = nil, label: String? = nil, clientUniqueID: String? = nil, isCompanion: String? = nil) {
        self.deploymentKey = deploymentKey
        self.appVersion = appVersion
        self.packageHash = packageHash
        self.label = label
        self.clientUniqueID = clientUniqueID
        self.isCompanion = isCompanion
      }

      public var asQuery: [(String, String?)] {
        let encoder = URLQueryEncoder()
        encoder.encode(deploymentKey, forKey: "deploymentKey")
        encoder.encode(appVersion, forKey: "appVersion")
        encoder.encode(packageHash, forKey: "packageHash")
        encoder.encode(label, forKey: "label")
        encoder.encode(clientUniqueID, forKey: "clientUniqueId")
        encoder.encode(isCompanion, forKey: "isCompanion")
        return encoder.items
      }
    }
  }
}
