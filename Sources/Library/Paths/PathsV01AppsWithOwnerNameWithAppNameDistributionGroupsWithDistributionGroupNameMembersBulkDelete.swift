// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.Apps.WithOwnerName.WithAppName.DistributionGroups.WithDistributionGroupName.Members {
  public var bulkDelete: BulkDelete {
    BulkDelete(path: path + "/bulk_delete")
  }

  public struct BulkDelete {
    /// Path: `/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/members/bulk_delete`
    public let path: String

    /// Remove the users from the distribution group
    public func post(userEmails: [String]? = nil) -> Request<[PostResponseItem]> {
      Request(method: "POST", url: path, body: ["user_emails": userEmails], id: "distributionGroups_removeUser")
    }

    public struct PostResponseItem: Decodable {
      /// The code of the result
      public var code: String?
      /// The message of the result
      public var message: Int?
      /// The status code of the result
      public var status: Int
      /// The email of the user
      public var userEmail: String?

      public init(code: String? = nil, message: Int? = nil, status: Int, userEmail: String? = nil) {
        self.code = code
        self.message = message
        self.status = status
        self.userEmail = userEmail
      }

      public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.code = try values.decodeIfPresent(String.self, forKey: "code")
        self.message = try values.decodeIfPresent(Int.self, forKey: "message")
        self.status = try values.decode(Int.self, forKey: "status")
        self.userEmail = try values.decodeIfPresent(String.self, forKey: "user_email")
      }
    }
  }
}
