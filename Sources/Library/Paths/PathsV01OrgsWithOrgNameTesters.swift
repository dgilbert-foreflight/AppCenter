// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.Orgs.WithOrgName {
  public var testers: Testers {
    Testers(path: path + "/testers")
  }

  public struct Testers {
    /// Path: `/v0.1/orgs/{org_name}/testers`
    public let path: String

    /// Returns a unique list of users including the whole organization members plus testers in any shared group of that org
    public var get: Request<[GetResponseItem]> {
      Request(method: "GET", url: path, id: "distributionGroups_listAllTestersForOrg")
    }

    public struct GetResponseItem: Decodable {
      /// The full name of the tester. Might for example be first and last name
      public var displayName: String?
      /// The unique name that is used to identify the tester.
      public var name: String
      /// The email address of the tester
      public var email: String

      public init(displayName: String? = nil, name: String, email: String) {
        self.displayName = displayName
        self.name = name
        self.email = email
      }

      public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.displayName = try values.decodeIfPresent(String.self, forKey: "display_name")
        self.name = try values.decode(String.self, forKey: "name")
        self.email = try values.decode(String.self, forKey: "email")
      }
    }
  }
}
