// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.Apps.WithOwnerName.WithAppName.Test.Export {
  public var testRuns: TestRuns {
    TestRuns(path: path + "/testRuns")
  }

  public struct TestRuns {
    /// Path: `/v0.1/apps/{owner_name}/{app_name}/test/export/testRuns`
    public let path: String

    /// Lists test run data
    public var get: Request<GetResponse> {
      Request(method: "GET", url: path, id: "test_gdprExportTestRun")
    }

    public struct GetResponse: Decodable, Identifiable {
      public var id: UUID?
      public var appHashFileID: UUID?
      public var locale: String?
      public var dsymHashFileID: UUID?
      public var appHashFileURL: String?
      public var dsymHashFileURL: String?
      public var appIconURL: String?

      public init(id: UUID? = nil, appHashFileID: UUID? = nil, locale: String? = nil, dsymHashFileID: UUID? = nil, appHashFileURL: String? = nil, dsymHashFileURL: String? = nil, appIconURL: String? = nil) {
        self.id = id
        self.appHashFileID = appHashFileID
        self.locale = locale
        self.dsymHashFileID = dsymHashFileID
        self.appHashFileURL = appHashFileURL
        self.dsymHashFileURL = dsymHashFileURL
        self.appIconURL = appIconURL
      }

      public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decodeIfPresent(UUID.self, forKey: "id")
        self.appHashFileID = try values.decodeIfPresent(UUID.self, forKey: "app_hash_file_id")
        self.locale = try values.decodeIfPresent(String.self, forKey: "locale")
        self.dsymHashFileID = try values.decodeIfPresent(UUID.self, forKey: "dsym_hash_file_id")
        self.appHashFileURL = try values.decodeIfPresent(String.self, forKey: "app_hash_file_url")
        self.dsymHashFileURL = try values.decodeIfPresent(String.self, forKey: "dsym_hash_file_url")
        self.appIconURL = try values.decodeIfPresent(String.self, forKey: "app_icon_url")
      }
    }
  }
}
