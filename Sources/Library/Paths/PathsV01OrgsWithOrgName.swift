// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.Orgs {
  public func orgName(_ orgName: String) -> WithOrgName {
    WithOrgName(path: "\(path)/\(orgName)")
  }

  public struct WithOrgName {
    /// Path: `/v0.1/orgs/{org_name}`
    public let path: String

    /// Returns the details of a single organization
    public var get: Request<[String: AnyJSON]> {
      Request(method: "GET", url: path, id: "organizations_get")
    }

    /// Returns a list of organizations the requesting user has access to
    public func patch(_ body: PatchRequest) -> Request<[String: AnyJSON]> {
      Request(method: "PATCH", url: path, body: body, id: "organizations_update")
    }

    public struct PatchRequest: Encodable {
      /// The full (friendly) name of the organization.
      public var displayName: String?
      /// The name of the organization used in URLs
      public var name: String?

      public init(displayName: String? = nil, name: String? = nil) {
        self.displayName = displayName
        self.name = name
      }

      public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(displayName, forKey: "display_name")
        try values.encodeIfPresent(name, forKey: "name")
      }
    }

    /// Deletes a single organization
    public var delete: Request<Void> {
      Request(method: "DELETE", url: path, id: "organizations_delete")
    }
  }
}
