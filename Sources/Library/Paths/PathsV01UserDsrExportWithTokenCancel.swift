// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.User.Dsr.Export.WithToken {
  public var cancel: Cancel {
    Cancel(path: path + "/cancel")
  }

  public struct Cancel {
    /// Path: `/v0.1/user/dsr/export/{token}/cancel`
    public let path: String

    public var post: Request<PostResponse> {
      Request(method: "POST", url: path, id: "DataSubjectRight_CancelExportRequest")
    }

    public struct PostResponse: Decodable {
      /// Unique request identifier
      public var token: UUID
      /// ISO 8601 format timestamp of when request was created.
      public var createdAt: Date

      public init(token: UUID, createdAt: Date) {
        self.token = token
        self.createdAt = createdAt
      }

      public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.token = try values.decode(UUID.self, forKey: "token")
        self.createdAt = try values.decode(Date.self, forKey: "createdAt")
      }
    }

    public enum PostResponseHeaders {
      /// Link to get details about the cancel export.
      public static let location = HTTPHeader<String>(field: "Location")
    }
  }
}
