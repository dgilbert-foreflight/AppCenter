// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.Apps.WithOwnerName.WithAppName.Builds {
  public func buildID(_ buildID: Int) -> WithBuildID {
    WithBuildID(path: "\(path)/\(buildID)")
  }

  public struct WithBuildID {
    /// Path: `/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}`
    public let path: String

    /// Returns the build detail for the given build ID
    public var get: Request<[String: AnyJSON]> {
      Request(method: "GET", url: path, id: "builds_get")
    }

    /// Cancels a build
    public func patch(status: PatchRequest.Status? = nil) -> Request<[String: AnyJSON]> {
      Request(method: "PATCH", url: path, body: PatchRequest(status: status), id: "builds_update")
    }

    public struct PatchRequest: Encodable {
      /// The build status; used to cancel builds
      public var status: Status?

      /// The build status; used to cancel builds
      public enum Status: String, Codable, CaseIterable {
        case cancelling
      }

      public init(status: Status? = nil) {
        self.status = status
      }

      public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(status, forKey: "status")
      }
    }
  }
}
