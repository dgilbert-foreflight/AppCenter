// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.Apps.WithOwnerName.WithAppName {
  public var versions: Versions {
    Versions(path: path + "/versions")
  }

  public struct Versions {
    /// Path: `/v0.1/apps/{owner_name}/{app_name}/versions`
    public let path: String

    /// Gets a list of application versions.
    @available(*, deprecated, message: "Deprecated")
    public var get: Request<[GetResponseItem]> {
      Request(method: "GET", url: path, id: "crashes_getAppVersions")
    }

    public struct GetResponseItem: Decodable {
      public var appVersionID: String
      public var appID: String
      public var displayName: String
      public var appVersion: String
      public var buildNumber: String?

      public init(appVersionID: String, appID: String, displayName: String, appVersion: String, buildNumber: String? = nil) {
        self.appVersionID = appVersionID
        self.appID = appID
        self.displayName = displayName
        self.appVersion = appVersion
        self.buildNumber = buildNumber
      }

      public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.appVersionID = try values.decode(String.self, forKey: "app_version_id")
        self.appID = try values.decode(String.self, forKey: "app_id")
        self.displayName = try values.decode(String.self, forKey: "display_name")
        self.appVersion = try values.decode(String.self, forKey: "app_version")
        self.buildNumber = try values.decodeIfPresent(String.self, forKey: "build_number")
      }
    }
  }
}
