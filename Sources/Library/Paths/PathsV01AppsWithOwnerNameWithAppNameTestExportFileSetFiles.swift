// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.Apps.WithOwnerName.WithAppName.Test.Export {
  public var fileSetFiles: FileSetFiles {
    FileSetFiles(path: path + "/fileSetFiles")
  }

  public struct FileSetFiles {
    /// Path: `/v0.1/apps/{owner_name}/{app_name}/test/export/fileSetFiles`
    public let path: String

    /// Lists file set file data
    public var get: Request<GetResponse> {
      Request(method: "GET", url: path, id: "test_gdprExportFileSetFile")
    }

    public struct GetResponse: Decodable {
      public var path: String?
      public var hashFileID: UUID?
      public var appUploadID: UUID?
      public var hashFileURL: String?

      public init(path: String? = nil, hashFileID: UUID? = nil, appUploadID: UUID? = nil, hashFileURL: String? = nil) {
        self.path = path
        self.hashFileID = hashFileID
        self.appUploadID = appUploadID
        self.hashFileURL = hashFileURL
      }

      public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.path = try values.decodeIfPresent(String.self, forKey: "path")
        self.hashFileID = try values.decodeIfPresent(UUID.self, forKey: "hash_file_id")
        self.appUploadID = try values.decodeIfPresent(UUID.self, forKey: "app_upload_id")
        self.hashFileURL = try values.decodeIfPresent(String.self, forKey: "hash_file_url")
      }
    }
  }
}
