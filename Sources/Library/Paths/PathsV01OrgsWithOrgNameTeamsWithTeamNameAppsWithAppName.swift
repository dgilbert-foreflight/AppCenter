// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.Orgs.WithOrgName.Teams.WithTeamName.Apps {
  public func appName(_ appName: String) -> WithAppName {
    WithAppName(path: "\(path)/\(appName)")
  }

  public struct WithAppName {
    /// Path: `/v0.1/orgs/{org_name}/teams/{team_name}/apps/{app_name}`
    public let path: String

    /// Updates the permissions the team has to the app
    public func patch(permissions: [PatchRequest.Permission]) -> Request<[String: AnyJSON]> {
      Request(method: "PATCH", url: path, body: PatchRequest(permissions: permissions), id: "teams_updatePermissions")
    }

    public struct PatchRequest: Encodable {
      /// The permissions all members of the team have on the app
      public var permissions: [Permission]

      public enum Permission: String, Codable, CaseIterable {
        case manager
        case developer
        case viewer
      }

      public init(permissions: [Permission]) {
        self.permissions = permissions
      }

      public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(permissions, forKey: "permissions")
      }
    }

    /// Removes an app from a team
    public var delete: Request<Void> {
      Request(method: "DELETE", url: path, id: "teams_removeApp")
    }
  }
}
