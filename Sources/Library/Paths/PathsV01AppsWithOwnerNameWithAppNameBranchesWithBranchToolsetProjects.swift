// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.Apps.WithOwnerName.WithAppName.Branches.WithBranch {
  public var toolsetProjects: ToolsetProjects {
    ToolsetProjects(path: path + "/toolset_projects")
  }

  public struct ToolsetProjects {
    /// Path: `/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/toolset_projects`
    public let path: String

    /// Returns the projects in the repository for the branch, for all toolsets
    public func get(parameters: GetParameters) -> Request<[String: AnyJSON]> {
      Request(method: "GET", url: path, query: parameters.asQuery, id: "builds_listToolsetProjects")
    }

    public struct GetParameters {
      public var os: Os
      public var platform: Platform
      public var maxSearchDepth: Int?

      public enum Os: String, Codable, CaseIterable {
        case iOS
        case android = "Android"
        case windows = "Windows"
        case macOS
      }

      public enum Platform: String, Codable, CaseIterable {
        case objectiveCSwift = "Objective-C-Swift"
        case reactNative = "React-Native"
        case xamarin = "Xamarin"
        case java = "Java"
        case uwp = "UWP"
      }

      public init(os: Os, platform: Platform, maxSearchDepth: Int? = nil) {
        self.os = os
        self.platform = platform
        self.maxSearchDepth = maxSearchDepth
      }

      public var asQuery: [(String, String?)] {
        let encoder = URLQueryEncoder()
        encoder.encode(os, forKey: "os")
        encoder.encode(platform, forKey: "platform")
        encoder.encode(maxSearchDepth, forKey: "maxSearchDepth")
        return encoder.items
      }
    }
  }
}
