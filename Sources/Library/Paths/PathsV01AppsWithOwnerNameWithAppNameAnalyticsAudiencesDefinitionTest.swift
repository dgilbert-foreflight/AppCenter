// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension API.Apps.WithOwnerName.WithAppName.Analytics.Audiences.Definition {
  public var test: Test {
    Test(path: path + "/test")
  }

  public struct Test {
    /// Path: `/v0.1/apps/{owner_name}/{app_name}/analytics/audiences/definition/test`
    public let path: String

    /// Tests audience definition.
    public func post(_ body: PostRequest) -> Request<[String: AnyJSON]> {
      Request(method: "POST", url: path, body: body, id: "Analytics_TestAudience")
    }

    /// Audience definition.
    public struct PostRequest: Encodable {
      /// Audience description.
      public var description: String?
      /// Audience definition in OData format.
      public var definition: String
      public var isEnabled: Bool
      /// Custom properties used in the definition.
      public var customProperties: [String: CustomProperty]?

      public enum CustomProperty: String, Codable, CaseIterable {
        case string
        case number
        case boolean
        case dateTime = "date_time"
      }

      public init(description: String? = nil, definition: String, isEnabled: Bool? = nil, customProperties: [String: CustomProperty]? = nil) {
        self.description = description
        self.definition = definition
        self.isEnabled = isEnabled ?? true
        self.customProperties = customProperties
      }

      public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(description, forKey: "description")
        try values.encode(definition, forKey: "definition")
        try values.encodeIfPresent(isEnabled, forKey: "enabled")
        try values.encodeIfPresent(customProperties, forKey: "custom_properties")
      }
    }
  }
}
