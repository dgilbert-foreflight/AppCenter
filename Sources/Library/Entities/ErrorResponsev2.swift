// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct ErrorResponsev2: Codable {
  public var error: Error

  public struct Error: Codable {
    public var code: Code
    public var message: String

    public enum Code: String, Codable, CaseIterable {
      case badRequest = "BadRequest"
      case conflict = "Conflict"
      case notAcceptable = "NotAcceptable"
      case notFound = "NotFound"
      case internalServerError = "InternalServerError"
      case unauthorized = "Unauthorized"
    }

    public init(code: Code, message: String) {
      self.code = code
      self.message = message
    }

    public init(from decoder: Decoder) throws {
      let values = try decoder.container(keyedBy: StringCodingKey.self)
      self.code = try values.decode(Code.self, forKey: "code")
      self.message = try values.decode(String.self, forKey: "message")
    }

    public func encode(to encoder: Encoder) throws {
      var values = encoder.container(keyedBy: StringCodingKey.self)
      try values.encode(code, forKey: "code")
      try values.encode(message, forKey: "message")
    }
  }

  public init(error: Error) {
    self.error = error
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.error = try values.decode(Error.self, forKey: "error")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encode(error, forKey: "error")
  }
}
