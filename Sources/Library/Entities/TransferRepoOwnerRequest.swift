// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct TransferRepoOwnerRequest: Codable {
  /// The internal unique id (UUID) of the user.
  public var newOwnerID: UUID
  /// The id of the related Intercom issue.
  public var issueID: String
  /// The explanation for starting transfer process.
  public var transferReason: String
  /// The id of the user who started transfer process.
  public var responsibleAdminID: UUID
  /// The url of repository to have its ownership transferred.
  public var repositoryURL: String

  public init(newOwnerID: UUID, issueID: String, transferReason: String, responsibleAdminID: UUID, repositoryURL: String) {
    self.newOwnerID = newOwnerID
    self.issueID = issueID
    self.transferReason = transferReason
    self.responsibleAdminID = responsibleAdminID
    self.repositoryURL = repositoryURL
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.newOwnerID = try values.decode(UUID.self, forKey: "new_owner_id")
    self.issueID = try values.decode(String.self, forKey: "issue_id")
    self.transferReason = try values.decode(String.self, forKey: "transfer_reason")
    self.responsibleAdminID = try values.decode(UUID.self, forKey: "responsible_admin_id")
    self.repositoryURL = try values.decode(String.self, forKey: "repository_url")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encode(newOwnerID, forKey: "new_owner_id")
    try values.encode(issueID, forKey: "issue_id")
    try values.encode(transferReason, forKey: "transfer_reason")
    try values.encode(responsibleAdminID, forKey: "responsible_admin_id")
    try values.encode(repositoryURL, forKey: "repository_url")
  }
}
