// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct IntuneStoreResponse: Codable {
  public var targetAudience: TargetAudience?
  public var appCategory: AppCategory?

  public struct TargetAudience: Codable, Identifiable {
    /// Display name for the target audience/group
    public var name: String?
    /// ID for the target audience/group.
    public var id: String?

    public init(name: String? = nil, id: String? = nil) {
      self.name = name
      self.id = id
    }

    public init(from decoder: Decoder) throws {
      let values = try decoder.container(keyedBy: StringCodingKey.self)
      self.name = try values.decodeIfPresent(String.self, forKey: "name")
      self.id = try values.decodeIfPresent(String.self, forKey: "id")
    }

    public func encode(to encoder: Encoder) throws {
      var values = encoder.container(keyedBy: StringCodingKey.self)
      try values.encodeIfPresent(name, forKey: "name")
      try values.encodeIfPresent(id, forKey: "id")
    }
  }

  public struct AppCategory: Codable, Identifiable {
    /// Display name for the app category
    public var name: String?
    /// ID for the category.
    public var id: String?

    public init(name: String? = nil, id: String? = nil) {
      self.name = name
      self.id = id
    }

    public init(from decoder: Decoder) throws {
      let values = try decoder.container(keyedBy: StringCodingKey.self)
      self.name = try values.decodeIfPresent(String.self, forKey: "name")
      self.id = try values.decodeIfPresent(String.self, forKey: "id")
    }

    public func encode(to encoder: Encoder) throws {
      var values = encoder.container(keyedBy: StringCodingKey.self)
      try values.encodeIfPresent(name, forKey: "name")
      try values.encodeIfPresent(id, forKey: "id")
    }
  }

  public init(targetAudience: TargetAudience? = nil, appCategory: AppCategory? = nil) {
    self.targetAudience = targetAudience
    self.appCategory = appCategory
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.targetAudience = try values.decodeIfPresent(TargetAudience.self, forKey: "target_audience")
    self.appCategory = try values.decodeIfPresent(AppCategory.self, forKey: "app_category")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(targetAudience, forKey: "target_audience")
    try values.encodeIfPresent(appCategory, forKey: "app_category")
  }
}
