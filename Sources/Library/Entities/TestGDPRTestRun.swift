// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct TestGDPRTestRun: Codable, Identifiable {
  public var id: UUID?
  public var appHashFileID: UUID?
  public var locale: String?
  public var dsymHashFileID: UUID?
  public var appHashFileURL: String?
  public var dsymHashFileURL: String?
  public var appIconURL: String?

  public init(id: UUID? = nil, appHashFileID: UUID? = nil, locale: String? = nil, dsymHashFileID: UUID? = nil, appHashFileURL: String? = nil, dsymHashFileURL: String? = nil, appIconURL: String? = nil) {
    self.id = id
    self.appHashFileID = appHashFileID
    self.locale = locale
    self.dsymHashFileID = dsymHashFileID
    self.appHashFileURL = appHashFileURL
    self.dsymHashFileURL = dsymHashFileURL
    self.appIconURL = appIconURL
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.id = try values.decodeIfPresent(UUID.self, forKey: "id")
    self.appHashFileID = try values.decodeIfPresent(UUID.self, forKey: "app_hash_file_id")
    self.locale = try values.decodeIfPresent(String.self, forKey: "locale")
    self.dsymHashFileID = try values.decodeIfPresent(UUID.self, forKey: "dsym_hash_file_id")
    self.appHashFileURL = try values.decodeIfPresent(String.self, forKey: "app_hash_file_url")
    self.dsymHashFileURL = try values.decodeIfPresent(String.self, forKey: "dsym_hash_file_url")
    self.appIconURL = try values.decodeIfPresent(String.self, forKey: "app_icon_url")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(id, forKey: "id")
    try values.encodeIfPresent(appHashFileID, forKey: "app_hash_file_id")
    try values.encodeIfPresent(locale, forKey: "locale")
    try values.encodeIfPresent(dsymHashFileID, forKey: "dsym_hash_file_id")
    try values.encodeIfPresent(appHashFileURL, forKey: "app_hash_file_url")
    try values.encodeIfPresent(dsymHashFileURL, forKey: "dsym_hash_file_url")
    try values.encodeIfPresent(appIconURL, forKey: "app_icon_url")
  }
}
