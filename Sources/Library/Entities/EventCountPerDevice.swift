// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct EventCountPerDevice: Codable {
  public var avgCountPerDevice: Double?
  public var previousAvgCountPerDevice: Double?
  public var countPerDevice: [CountPerDeviceItem]?

  public struct CountPerDeviceItem: Codable {
    /// The ISO 8601 datetime.
    public var datetime: String?
    /// Decimal count of the object.
    public var count: Double?

    public init(datetime: String? = nil, count: Double? = nil) {
      self.datetime = datetime
      self.count = count
    }

    public init(from decoder: Decoder) throws {
      let values = try decoder.container(keyedBy: StringCodingKey.self)
      self.datetime = try values.decodeIfPresent(String.self, forKey: "datetime")
      self.count = try values.decodeIfPresent(Double.self, forKey: "count")
    }

    public func encode(to encoder: Encoder) throws {
      var values = encoder.container(keyedBy: StringCodingKey.self)
      try values.encodeIfPresent(datetime, forKey: "datetime")
      try values.encodeIfPresent(count, forKey: "count")
    }
  }

  public init(avgCountPerDevice: Double? = nil, previousAvgCountPerDevice: Double? = nil, countPerDevice: [CountPerDeviceItem]? = nil) {
    self.avgCountPerDevice = avgCountPerDevice
    self.previousAvgCountPerDevice = previousAvgCountPerDevice
    self.countPerDevice = countPerDevice
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.avgCountPerDevice = try values.decodeIfPresent(Double.self, forKey: "avg_count_per_device")
    self.previousAvgCountPerDevice = try values.decodeIfPresent(Double.self, forKey: "previous_avg_count_per_device")
    self.countPerDevice = try values.decodeIfPresent([CountPerDeviceItem].self, forKey: "count_per_device")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(avgCountPerDevice, forKey: "avg_count_per_device")
    try values.encodeIfPresent(previousAvgCountPerDevice, forKey: "previous_avg_count_per_device")
    try values.encodeIfPresent(countPerDevice, forKey: "count_per_device")
  }
}
