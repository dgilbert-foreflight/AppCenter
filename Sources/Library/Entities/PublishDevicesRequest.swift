// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// The publising information.
public struct PublishDevicesRequest: Codable {
  /// The username for the Apple Developer account to publish the devices to.
  public var username: String?
  /// The password for the Apple Developer account to publish the devices to.
  public var password: String?
  /// The service_connection_id of the stored Apple credentials instead of username, password.
  public var accountServiceConnectionID: String?
  /// When set to true, all unprovisioned devices will be published to the Apple Developer account.  When false, only the provided devices will be published to the Apple Developer account.
  public var isPublishAllDevices: Bool?
  /// Array of device UDID's to be published to the Apple Developer account.
  public var devices: [String]?

  public init(username: String? = nil, password: String? = nil, accountServiceConnectionID: String? = nil, isPublishAllDevices: Bool? = nil, devices: [String]? = nil) {
    self.username = username
    self.password = password
    self.accountServiceConnectionID = accountServiceConnectionID
    self.isPublishAllDevices = isPublishAllDevices
    self.devices = devices
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.username = try values.decodeIfPresent(String.self, forKey: "username")
    self.password = try values.decodeIfPresent(String.self, forKey: "password")
    self.accountServiceConnectionID = try values.decodeIfPresent(String.self, forKey: "account_service_connection_id")
    self.isPublishAllDevices = try values.decodeIfPresent(Bool.self, forKey: "publish_all_devices")
    self.devices = try values.decodeIfPresent([String].self, forKey: "devices")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(username, forKey: "username")
    try values.encodeIfPresent(password, forKey: "password")
    try values.encodeIfPresent(accountServiceConnectionID, forKey: "account_service_connection_id")
    try values.encodeIfPresent(isPublishAllDevices, forKey: "publish_all_devices")
    try values.encodeIfPresent(devices, forKey: "devices")
  }
}
