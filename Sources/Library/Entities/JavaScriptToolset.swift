// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct JavaScriptToolset: Codable {
  /// Paths for detected package.json files
  public var packageJSONPaths: [String]
  /// The React Native solutions detected
  public var javascriptSolutions: [JavascriptSolution]?

  public struct JavascriptSolution: Codable {
    /// The path to the detected package.json
    public var packageJSONPath: String
    /// Version of React Native from package.json files
    public var reactNativeVersion: String?

    public init(packageJSONPath: String, reactNativeVersion: String? = nil) {
      self.packageJSONPath = packageJSONPath
      self.reactNativeVersion = reactNativeVersion
    }

    public init(from decoder: Decoder) throws {
      let values = try decoder.container(keyedBy: StringCodingKey.self)
      self.packageJSONPath = try values.decode(String.self, forKey: "packageJsonPath")
      self.reactNativeVersion = try values.decodeIfPresent(String.self, forKey: "reactNativeVersion")
    }

    public func encode(to encoder: Encoder) throws {
      var values = encoder.container(keyedBy: StringCodingKey.self)
      try values.encode(packageJSONPath, forKey: "packageJsonPath")
      try values.encodeIfPresent(reactNativeVersion, forKey: "reactNativeVersion")
    }
  }

  public init(packageJSONPaths: [String], javascriptSolutions: [JavascriptSolution]? = nil) {
    self.packageJSONPaths = packageJSONPaths
    self.javascriptSolutions = javascriptSolutions
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.packageJSONPaths = try values.decode([String].self, forKey: "packageJsonPaths")
    self.javascriptSolutions = try values.decodeIfPresent([JavascriptSolution].self, forKey: "javascriptSolutions")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encode(packageJSONPaths, forKey: "packageJsonPaths")
    try values.encodeIfPresent(javascriptSolutions, forKey: "javascriptSolutions")
  }
}
