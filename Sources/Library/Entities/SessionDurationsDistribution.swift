// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct SessionDurationsDistribution: Codable {
  /// The count of sessions in these buckets.
  public var distribution: [DistributionItem]?
  /// The previous average session duration for previous time range.
  public var previousAverageDuration: String?
  /// The average session duration for current time range.
  public var averageDuration: String?

  public struct DistributionItem: Codable {
    /// The bucket name.
    public var bucket: String?
    /// The count of sessions in current bucket.
    public var count: Int64?

    public init(bucket: String? = nil, count: Int64? = nil) {
      self.bucket = bucket
      self.count = count
    }

    public init(from decoder: Decoder) throws {
      let values = try decoder.container(keyedBy: StringCodingKey.self)
      self.bucket = try values.decodeIfPresent(String.self, forKey: "bucket")
      self.count = try values.decodeIfPresent(Int64.self, forKey: "count")
    }

    public func encode(to encoder: Encoder) throws {
      var values = encoder.container(keyedBy: StringCodingKey.self)
      try values.encodeIfPresent(bucket, forKey: "bucket")
      try values.encodeIfPresent(count, forKey: "count")
    }
  }

  public init(distribution: [DistributionItem]? = nil, previousAverageDuration: String? = nil, averageDuration: String? = nil) {
    self.distribution = distribution
    self.previousAverageDuration = previousAverageDuration
    self.averageDuration = averageDuration
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.distribution = try values.decodeIfPresent([DistributionItem].self, forKey: "distribution")
    self.previousAverageDuration = try values.decodeIfPresent(String.self, forKey: "previous_average_duration")
    self.averageDuration = try values.decodeIfPresent(String.self, forKey: "average_duration")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(distribution, forKey: "distribution")
    try values.encodeIfPresent(previousAverageDuration, forKey: "previous_average_duration")
    try values.encodeIfPresent(averageDuration, forKey: "average_duration")
  }
}
