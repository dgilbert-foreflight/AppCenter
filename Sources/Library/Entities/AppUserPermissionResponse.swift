// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct AppUserPermissionResponse: Codable {
  /// The unique id (UUID) of the app
  public var appID: UUID
  /// The permissions the user has for the app
  public var permissions: [Permission]
  /// The email of the user
  public var userEmail: String
  /// The unique id (UUID) of the user
  public var userID: UUID
  /// The creation origin of this app
  public var appOrigin: AppOrigin
  /// A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics
  public var appSecret: String

  public enum Permission: String, Codable, CaseIterable {
    case manager
    case developer
    case viewer
    case tester
  }

  /// The creation origin of this app
  public enum AppOrigin: String, Codable, CaseIterable {
    case appcenter
    case codepush
  }

  public init(appID: UUID, permissions: [Permission], userEmail: String, userID: UUID, appOrigin: AppOrigin, appSecret: String) {
    self.appID = appID
    self.permissions = permissions
    self.userEmail = userEmail
    self.userID = userID
    self.appOrigin = appOrigin
    self.appSecret = appSecret
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.appID = try values.decode(UUID.self, forKey: "app_id")
    self.permissions = try values.decode([Permission].self, forKey: "permissions")
    self.userEmail = try values.decode(String.self, forKey: "user_email")
    self.userID = try values.decode(UUID.self, forKey: "user_id")
    self.appOrigin = try values.decode(AppOrigin.self, forKey: "app_origin")
    self.appSecret = try values.decode(String.self, forKey: "app_secret")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encode(appID, forKey: "app_id")
    try values.encode(permissions, forKey: "permissions")
    try values.encode(userEmail, forKey: "user_email")
    try values.encode(userID, forKey: "user_id")
    try values.encode(appOrigin, forKey: "app_origin")
    try values.encode(appSecret, forKey: "app_secret")
  }
}
