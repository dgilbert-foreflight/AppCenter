// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct LegacyAccountResponse: Codable {
  /// Object containing the account information.
  public var account: [String: AccountItem]?

  public struct AccountItem: Codable {
    /// The account name of the calling user.
    public var name: String?
    /// The calling user's email.
    public var email: String?
    /// Array of linked authentication providers associated with the account.
    public var linkedProviders: [String]?

    public init(name: String? = nil, email: String? = nil, linkedProviders: [String]? = nil) {
      self.name = name
      self.email = email
      self.linkedProviders = linkedProviders
    }

    public init(from decoder: Decoder) throws {
      let values = try decoder.container(keyedBy: StringCodingKey.self)
      self.name = try values.decodeIfPresent(String.self, forKey: "name")
      self.email = try values.decodeIfPresent(String.self, forKey: "email")
      self.linkedProviders = try values.decodeIfPresent([String].self, forKey: "linkedProviders")
    }

    public func encode(to encoder: Encoder) throws {
      var values = encoder.container(keyedBy: StringCodingKey.self)
      try values.encodeIfPresent(name, forKey: "name")
      try values.encodeIfPresent(email, forKey: "email")
      try values.encodeIfPresent(linkedProviders, forKey: "linkedProviders")
    }
  }

  public init(account: [String: AccountItem]? = nil) {
    self.account = account
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.account = try values.decodeIfPresent([String: AccountItem].self, forKey: "account")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(account, forKey: "account")
  }
}
