// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Test Cloud File Hash
///
/// Hash, type, path and byte range of a file that is required in test run
public struct TestCloudFileHashDeprecated: Codable {
  /// Type of the file
  public var fileType: FileType
  /// SHA256 hash of the file
  public var checksum: String
  /// Relative path of the file
  public var relativePath: String
  /// Range of bytes required to verify ownership of the file
  public var byteRange: String?

  /// Type of the file
  public enum FileType: String, Codable, CaseIterable {
    case dsymFile = "dsym-file"
    case appFile = "app-file"
    case testFile = "test-file"
  }

  public init(fileType: FileType, checksum: String, relativePath: String, byteRange: String? = nil) {
    self.fileType = fileType
    self.checksum = checksum
    self.relativePath = relativePath
    self.byteRange = byteRange
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.fileType = try values.decode(FileType.self, forKey: "file_type")
    self.checksum = try values.decode(String.self, forKey: "checksum")
    self.relativePath = try values.decode(String.self, forKey: "relative_path")
    self.byteRange = try values.decodeIfPresent(String.self, forKey: "byte_range")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encode(fileType, forKey: "file_type")
    try values.encode(checksum, forKey: "checksum")
    try values.encode(relativePath, forKey: "relative_path")
    try values.encodeIfPresent(byteRange, forKey: "byte_range")
  }
}
