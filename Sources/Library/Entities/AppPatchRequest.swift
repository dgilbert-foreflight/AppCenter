// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct AppPatchRequest: Codable {
  /// A short text describing the app
  public var description: String?
  /// The display name of the app
  public var displayName: String?
  /// A one-word descriptive release type value that starts with a capital letter but is otherwise lowercase
  public var releaseType: String?
  /// The name of the app used in URLs
  public var name: String?
  /// The string representation of the URL pointing to the app's icon
  public var iconURL: String?
  /// The uuid for the icon's asset id from ACFUS
  public var iconAssetID: UUID?

  public init(description: String? = nil, displayName: String? = nil, releaseType: String? = nil, name: String? = nil, iconURL: String? = nil, iconAssetID: UUID? = nil) {
    self.description = description
    self.displayName = displayName
    self.releaseType = releaseType
    self.name = name
    self.iconURL = iconURL
    self.iconAssetID = iconAssetID
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.description = try values.decodeIfPresent(String.self, forKey: "description")
    self.displayName = try values.decodeIfPresent(String.self, forKey: "display_name")
    self.releaseType = try values.decodeIfPresent(String.self, forKey: "release_type")
    self.name = try values.decodeIfPresent(String.self, forKey: "name")
    self.iconURL = try values.decodeIfPresent(String.self, forKey: "icon_url")
    self.iconAssetID = try values.decodeIfPresent(UUID.self, forKey: "icon_asset_id")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(description, forKey: "description")
    try values.encodeIfPresent(displayName, forKey: "display_name")
    try values.encodeIfPresent(releaseType, forKey: "release_type")
    try values.encodeIfPresent(name, forKey: "name")
    try values.encodeIfPresent(iconURL, forKey: "icon_url")
    try values.encodeIfPresent(iconAssetID, forKey: "icon_asset_id")
  }
}
