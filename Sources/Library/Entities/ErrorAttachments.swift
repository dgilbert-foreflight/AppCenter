// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct ErrorAttachmants: Codable {
  public var appID: String?
  public var attachmentID: String?
  public var crashID: String?
  public var blobLocation: String?
  public var contentType: String?
  public var fileName: String?
  public var createdTime: Date?
  public var size: Int64?

  public init(appID: String? = nil, attachmentID: String? = nil, crashID: String? = nil, blobLocation: String? = nil, contentType: String? = nil, fileName: String? = nil, createdTime: Date? = nil, size: Int64? = nil) {
    self.appID = appID
    self.attachmentID = attachmentID
    self.crashID = crashID
    self.blobLocation = blobLocation
    self.contentType = contentType
    self.fileName = fileName
    self.createdTime = createdTime
    self.size = size
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.appID = try values.decodeIfPresent(String.self, forKey: "appId")
    self.attachmentID = try values.decodeIfPresent(String.self, forKey: "attachmentId")
    self.crashID = try values.decodeIfPresent(String.self, forKey: "crashId")
    self.blobLocation = try values.decodeIfPresent(String.self, forKey: "blobLocation")
    self.contentType = try values.decodeIfPresent(String.self, forKey: "contentType")
    self.fileName = try values.decodeIfPresent(String.self, forKey: "fileName")
    self.createdTime = try values.decodeIfPresent(Date.self, forKey: "createdTime")
    self.size = try values.decodeIfPresent(Int64.self, forKey: "size")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(appID, forKey: "appId")
    try values.encodeIfPresent(attachmentID, forKey: "attachmentId")
    try values.encodeIfPresent(crashID, forKey: "crashId")
    try values.encodeIfPresent(blobLocation, forKey: "blobLocation")
    try values.encodeIfPresent(contentType, forKey: "contentType")
    try values.encodeIfPresent(fileName, forKey: "fileName")
    try values.encodeIfPresent(createdTime, forKey: "createdTime")
    try values.encodeIfPresent(size, forKey: "size")
  }
}
