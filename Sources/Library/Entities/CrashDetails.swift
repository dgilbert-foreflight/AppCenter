// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct CrashDetails: Codable {
  /// Carrier country code (for mobile devices).
  public var carrierCountry: String?
  /// Carrier name (for mobile devices).
  public var carrierName: String?
  /// Language code (example: en_US).
  public var locale: String
  /// OS build code (example: LMY47X).
  public var osBuild: String?
  /// Whether the device where the crash occurred is rooted or jailbroken
  public var isRooted: Bool
  /// Screen size of the device in pixels (example: 640x480).
  public var screenSize: String
  /// Application launch timestamp (example: 1985-04-12T23:20:50.52Z).
  public var appStartTimestamp: Date?

  public init(carrierCountry: String? = nil, carrierName: String? = nil, locale: String, osBuild: String? = nil, isRooted: Bool, screenSize: String, appStartTimestamp: Date? = nil) {
    self.carrierCountry = carrierCountry
    self.carrierName = carrierName
    self.locale = locale
    self.osBuild = osBuild
    self.isRooted = isRooted
    self.screenSize = screenSize
    self.appStartTimestamp = appStartTimestamp
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.carrierCountry = try values.decodeIfPresent(String.self, forKey: "carrier_country")
    self.carrierName = try values.decodeIfPresent(String.self, forKey: "carrier_name")
    self.locale = try values.decode(String.self, forKey: "locale")
    self.osBuild = try values.decodeIfPresent(String.self, forKey: "os_build")
    self.isRooted = try values.decode(Bool.self, forKey: "rooted")
    self.screenSize = try values.decode(String.self, forKey: "screen_size")
    self.appStartTimestamp = try values.decodeIfPresent(Date.self, forKey: "app_start_timestamp")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(carrierCountry, forKey: "carrier_country")
    try values.encodeIfPresent(carrierName, forKey: "carrier_name")
    try values.encode(locale, forKey: "locale")
    try values.encodeIfPresent(osBuild, forKey: "os_build")
    try values.encode(isRooted, forKey: "rooted")
    try values.encode(screenSize, forKey: "screen_size")
    try values.encodeIfPresent(appStartTimestamp, forKey: "app_start_timestamp")
  }
}
