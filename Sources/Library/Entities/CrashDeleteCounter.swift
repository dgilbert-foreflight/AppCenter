// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct CrashDeleteCounter: Codable {
  public var appID: String?
  public var crashGroupID: String?
  public var crashID: String?
  public var crashesDeleted: Int?
  public var attachmentsDeleted: Int?
  public var blobsSucceeded: Int?
  public var blobsFailed: Int?

  public init(appID: String? = nil, crashGroupID: String? = nil, crashID: String? = nil, crashesDeleted: Int? = nil, attachmentsDeleted: Int? = nil, blobsSucceeded: Int? = nil, blobsFailed: Int? = nil) {
    self.appID = appID
    self.crashGroupID = crashGroupID
    self.crashID = crashID
    self.crashesDeleted = crashesDeleted
    self.attachmentsDeleted = attachmentsDeleted
    self.blobsSucceeded = blobsSucceeded
    self.blobsFailed = blobsFailed
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.appID = try values.decodeIfPresent(String.self, forKey: "app_id")
    self.crashGroupID = try values.decodeIfPresent(String.self, forKey: "crash_group_id")
    self.crashID = try values.decodeIfPresent(String.self, forKey: "crash_id")
    self.crashesDeleted = try values.decodeIfPresent(Int.self, forKey: "crashes_deleted")
    self.attachmentsDeleted = try values.decodeIfPresent(Int.self, forKey: "attachments_deleted")
    self.blobsSucceeded = try values.decodeIfPresent(Int.self, forKey: "blobs_succeeded")
    self.blobsFailed = try values.decodeIfPresent(Int.self, forKey: "blobs_failed")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(appID, forKey: "app_id")
    try values.encodeIfPresent(crashGroupID, forKey: "crash_group_id")
    try values.encodeIfPresent(crashID, forKey: "crash_id")
    try values.encodeIfPresent(crashesDeleted, forKey: "crashes_deleted")
    try values.encodeIfPresent(attachmentsDeleted, forKey: "attachments_deleted")
    try values.encodeIfPresent(blobsSucceeded, forKey: "blobs_succeeded")
    try values.encodeIfPresent(blobsFailed, forKey: "blobs_failed")
  }
}
