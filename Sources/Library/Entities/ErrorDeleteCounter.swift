// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct ErrorDeleteCounter: Codable {
  public var appID: String?
  public var errorGroupID: String?
  public var errorID: String?
  public var errorsDeleted: Int?
  public var attachmentsDeleted: Int?
  public var blobsSucceeded: Int?
  public var blobsFailed: Int?

  public init(appID: String? = nil, errorGroupID: String? = nil, errorID: String? = nil, errorsDeleted: Int? = nil, attachmentsDeleted: Int? = nil, blobsSucceeded: Int? = nil, blobsFailed: Int? = nil) {
    self.appID = appID
    self.errorGroupID = errorGroupID
    self.errorID = errorID
    self.errorsDeleted = errorsDeleted
    self.attachmentsDeleted = attachmentsDeleted
    self.blobsSucceeded = blobsSucceeded
    self.blobsFailed = blobsFailed
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.appID = try values.decodeIfPresent(String.self, forKey: "appId")
    self.errorGroupID = try values.decodeIfPresent(String.self, forKey: "errorGroupId")
    self.errorID = try values.decodeIfPresent(String.self, forKey: "errorId")
    self.errorsDeleted = try values.decodeIfPresent(Int.self, forKey: "errorsDeleted")
    self.attachmentsDeleted = try values.decodeIfPresent(Int.self, forKey: "attachmentsDeleted")
    self.blobsSucceeded = try values.decodeIfPresent(Int.self, forKey: "blobsSucceeded")
    self.blobsFailed = try values.decodeIfPresent(Int.self, forKey: "blobsFailed")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(appID, forKey: "appId")
    try values.encodeIfPresent(errorGroupID, forKey: "errorGroupId")
    try values.encodeIfPresent(errorID, forKey: "errorId")
    try values.encodeIfPresent(errorsDeleted, forKey: "errorsDeleted")
    try values.encodeIfPresent(attachmentsDeleted, forKey: "attachmentsDeleted")
    try values.encodeIfPresent(blobsSucceeded, forKey: "blobsSucceeded")
    try values.encodeIfPresent(blobsFailed, forKey: "blobsFailed")
  }
}
