// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// VSTS user profile
public struct VSTSProfile: Codable, Identifiable {
  /// Profile id
  public var id: String?
  /// Profile display name
  public var displayName: String?
  /// Profile alias
  public var publicAlias: String?
  /// Profile email
  public var emailAddress: String?

  public init(id: String? = nil, displayName: String? = nil, publicAlias: String? = nil, emailAddress: String? = nil) {
    self.id = id
    self.displayName = displayName
    self.publicAlias = publicAlias
    self.emailAddress = emailAddress
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.id = try values.decodeIfPresent(String.self, forKey: "id")
    self.displayName = try values.decodeIfPresent(String.self, forKey: "displayName")
    self.publicAlias = try values.decodeIfPresent(String.self, forKey: "publicAlias")
    self.emailAddress = try values.decodeIfPresent(String.self, forKey: "emailAddress")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(id, forKey: "id")
    try values.encodeIfPresent(displayName, forKey: "displayName")
    try values.encodeIfPresent(publicAlias, forKey: "publicAlias")
    try values.encodeIfPresent(emailAddress, forKey: "emailAddress")
  }
}
