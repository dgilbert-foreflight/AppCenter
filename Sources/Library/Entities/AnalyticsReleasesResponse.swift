// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct AnalyticsReleasesResponse: Codable {
  public var releases: [Release]?

  public struct Release: Codable {
    /// Release id
    public var releaseID: Int
    /// Distribution group id
    public var distributionGroupID: String
    /// User id
    public var userID: UUID

    public init(releaseID: Int, distributionGroupID: String, userID: UUID) {
      self.releaseID = releaseID
      self.distributionGroupID = distributionGroupID
      self.userID = userID
    }

    public init(from decoder: Decoder) throws {
      let values = try decoder.container(keyedBy: StringCodingKey.self)
      self.releaseID = try values.decode(Int.self, forKey: "release_id")
      self.distributionGroupID = try values.decode(String.self, forKey: "distribution_group_id")
      self.userID = try values.decode(UUID.self, forKey: "user_id")
    }

    public func encode(to encoder: Encoder) throws {
      var values = encoder.container(keyedBy: StringCodingKey.self)
      try values.encode(releaseID, forKey: "release_id")
      try values.encode(distributionGroupID, forKey: "distribution_group_id")
      try values.encode(userID, forKey: "user_id")
    }
  }

  public init(releases: [Release]? = nil) {
    self.releases = releases
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.releases = try values.decodeIfPresent([Release].self, forKey: "releases")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(releases, forKey: "releases")
  }
}
