// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct CommitDetailsListItem: Codable {
  /// The commit SHA
  public var sha: String?
  /// The URL to the commit
  public var url: String?
  public var commit: Commit?

  public struct Commit: Codable {
    /// Commit message
    public var message: String?
    public var author: Author?

    public struct Author: Codable {
      /// Date and time of the commit
      public var date: String?
      /// Author name
      public var name: String?
      /// Author's email
      public var email: String?

      public init(date: String? = nil, name: String? = nil, email: String? = nil) {
        self.date = date
        self.name = name
        self.email = email
      }

      public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.date = try values.decodeIfPresent(String.self, forKey: "date")
        self.name = try values.decodeIfPresent(String.self, forKey: "name")
        self.email = try values.decodeIfPresent(String.self, forKey: "email")
      }

      public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(date, forKey: "date")
        try values.encodeIfPresent(name, forKey: "name")
        try values.encodeIfPresent(email, forKey: "email")
      }
    }

    public init(message: String? = nil, author: Author? = nil) {
      self.message = message
      self.author = author
    }

    public init(from decoder: Decoder) throws {
      let values = try decoder.container(keyedBy: StringCodingKey.self)
      self.message = try values.decodeIfPresent(String.self, forKey: "message")
      self.author = try values.decodeIfPresent(Author.self, forKey: "author")
    }

    public func encode(to encoder: Encoder) throws {
      var values = encoder.container(keyedBy: StringCodingKey.self)
      try values.encodeIfPresent(message, forKey: "message")
      try values.encodeIfPresent(author, forKey: "author")
    }
  }

  public init(sha: String? = nil, url: String? = nil, commit: Commit? = nil) {
    self.sha = sha
    self.url = url
    self.commit = commit
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.sha = try values.decodeIfPresent(String.self, forKey: "sha")
    self.url = try values.decodeIfPresent(String.self, forKey: "url")
    self.commit = try values.decodeIfPresent(Commit.self, forKey: "commit")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(sha, forKey: "sha")
    try values.encodeIfPresent(url, forKey: "url")
    try values.encodeIfPresent(commit, forKey: "commit")
  }
}
