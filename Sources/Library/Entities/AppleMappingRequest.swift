// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Apple Mapping Request Type
public struct AppleMappingRequest: Codable {
  /// Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center.
  public var serviceConnectionID: String
  /// ID of the apple application in apple store, takes precedence over bundle_identifier when both are provided
  public var appleID: String?
  /// Bundle Identifier of the apple package
  public var bundleIdentifier: String?
  /// ID of the Team associated with the app in apple store
  public var teamIdentifier: String

  public init(serviceConnectionID: String, appleID: String? = nil, bundleIdentifier: String? = nil, teamIdentifier: String) {
    self.serviceConnectionID = serviceConnectionID
    self.appleID = appleID
    self.bundleIdentifier = bundleIdentifier
    self.teamIdentifier = teamIdentifier
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.serviceConnectionID = try values.decode(String.self, forKey: "service_connection_id")
    self.appleID = try values.decodeIfPresent(String.self, forKey: "apple_id")
    self.bundleIdentifier = try values.decodeIfPresent(String.self, forKey: "bundle_identifier")
    self.teamIdentifier = try values.decode(String.self, forKey: "team_identifier")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encode(serviceConnectionID, forKey: "service_connection_id")
    try values.encodeIfPresent(appleID, forKey: "apple_id")
    try values.encodeIfPresent(bundleIdentifier, forKey: "bundle_identifier")
    try values.encode(teamIdentifier, forKey: "team_identifier")
  }
}
