// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// An object containing information about an iOS provisioning profile.
public struct ProvisioningProfile: Codable {
  /// The name of the provisioning profile.
  public var name: String
  /// The application identifier.
  public var applicationIdentifier: String
  /// The team identifier.
  public var teamIdentifier: String
  public var profileType: ProfileType
  /// The profile's expiration date in RFC 3339 format, i.e. 2017-07-21T17:32:28Z
  public var expiredAt: String
  public var udids: [String]?

  public enum ProfileType: String, Codable, CaseIterable {
    case adhoc
    case enterprise
    case other
  }

  public init(name: String, applicationIdentifier: String, teamIdentifier: String, profileType: ProfileType, expiredAt: String, udids: [String]? = nil) {
    self.name = name
    self.applicationIdentifier = applicationIdentifier
    self.teamIdentifier = teamIdentifier
    self.profileType = profileType
    self.expiredAt = expiredAt
    self.udids = udids
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.name = try values.decode(String.self, forKey: "name")
    self.applicationIdentifier = try values.decode(String.self, forKey: "application_identifier")
    self.teamIdentifier = try values.decode(String.self, forKey: "team_identifier")
    self.profileType = try values.decode(ProfileType.self, forKey: "profile_type")
    self.expiredAt = try values.decode(String.self, forKey: "expired_at")
    self.udids = try values.decodeIfPresent([String].self, forKey: "udids")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encode(name, forKey: "name")
    try values.encode(applicationIdentifier, forKey: "application_identifier")
    try values.encode(teamIdentifier, forKey: "team_identifier")
    try values.encode(profileType, forKey: "profile_type")
    try values.encode(expiredAt, forKey: "expired_at")
    try values.encodeIfPresent(udids, forKey: "udids")
  }
}
