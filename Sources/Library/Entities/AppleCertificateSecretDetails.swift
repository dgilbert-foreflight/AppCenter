// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Apple Certificate Secret Details
public struct AppleCertificateSecretDetails: Codable {
  /// The certificate contents in base 64 encoded string
  public var base64Certificate: String
  /// The password for the certificate
  public var password: String
  /// The display name (CN) of the certificate
  public var displayName: String
  /// The date-time from which the certificate is valid
  public var certificateValidityStartDate: String
  /// The date-time till which the certificate is valid
  public var certificateValidityEndDate: String

  public init(base64Certificate: String, password: String, displayName: String, certificateValidityStartDate: String, certificateValidityEndDate: String) {
    self.base64Certificate = base64Certificate
    self.password = password
    self.displayName = displayName
    self.certificateValidityStartDate = certificateValidityStartDate
    self.certificateValidityEndDate = certificateValidityEndDate
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.base64Certificate = try values.decode(String.self, forKey: "base64Certificate")
    self.password = try values.decode(String.self, forKey: "password")
    self.displayName = try values.decode(String.self, forKey: "displayName")
    self.certificateValidityStartDate = try values.decode(String.self, forKey: "certificateValidityStartDate")
    self.certificateValidityEndDate = try values.decode(String.self, forKey: "certificateValidityEndDate")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encode(base64Certificate, forKey: "base64Certificate")
    try values.encode(password, forKey: "password")
    try values.encode(displayName, forKey: "displayName")
    try values.encode(certificateValidityStartDate, forKey: "certificateValidityStartDate")
    try values.encode(certificateValidityEndDate, forKey: "certificateValidityEndDate")
  }
}
