// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Usage for a single period
public struct UsagePeriod: Codable {
  /// Inclusive start time of the usage period
  public var startTime: String?
  /// Exclusive end time of the usage period.
  public var endTime: String?
  /// A collection of named numeric values
  public var byAccount: [String: Double]?
  /// A collection of  named numeric values grouped by app
  public var byApp: [String: [String: Double]]?

  public init(startTime: String? = nil, endTime: String? = nil, byAccount: [String: Double]? = nil, byApp: [String: [String: Double]]? = nil) {
    self.startTime = startTime
    self.endTime = endTime
    self.byAccount = byAccount
    self.byApp = byApp
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.startTime = try values.decodeIfPresent(String.self, forKey: "startTime")
    self.endTime = try values.decodeIfPresent(String.self, forKey: "endTime")
    self.byAccount = try values.decodeIfPresent([String: Double].self, forKey: "byAccount")
    self.byApp = try values.decodeIfPresent([String: [String: Double]].self, forKey: "byApp")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(startTime, forKey: "startTime")
    try values.encodeIfPresent(endTime, forKey: "endTime")
    try values.encodeIfPresent(byAccount, forKey: "byAccount")
    try values.encodeIfPresent(byApp, forKey: "byApp")
  }
}
