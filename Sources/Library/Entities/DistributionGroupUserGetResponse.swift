// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct DistributionGroupUserGetResponse: Codable, Identifiable {
  /// The unique id (UUID) of the user
  public var id: UUID?
  /// The avatar URL of the user
  public var avatarURL: String?
  /// User is required to send an old password in order to change the password.
  public var canChangePassword: Bool?
  /// The full name of the user. Might for example be first and last name
  public var displayName: String?
  /// The email address of the user
  public var email: String
  /// Whether the has accepted the invite. Available when an invite is pending, and the value will be "true".
  public var isInvitePending: Bool?
  /// The unique name that is used to identify the user.
  public var name: String?

  public init(id: UUID? = nil, avatarURL: String? = nil, canChangePassword: Bool? = nil, displayName: String? = nil, email: String, isInvitePending: Bool? = nil, name: String? = nil) {
    self.id = id
    self.avatarURL = avatarURL
    self.canChangePassword = canChangePassword
    self.displayName = displayName
    self.email = email
    self.isInvitePending = isInvitePending
    self.name = name
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.id = try values.decodeIfPresent(UUID.self, forKey: "id")
    self.avatarURL = try values.decodeIfPresent(String.self, forKey: "avatar_url")
    self.canChangePassword = try values.decodeIfPresent(Bool.self, forKey: "can_change_password")
    self.displayName = try values.decodeIfPresent(String.self, forKey: "display_name")
    self.email = try values.decode(String.self, forKey: "email")
    self.isInvitePending = try values.decodeIfPresent(Bool.self, forKey: "invite_pending")
    self.name = try values.decodeIfPresent(String.self, forKey: "name")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(id, forKey: "id")
    try values.encodeIfPresent(avatarURL, forKey: "avatar_url")
    try values.encodeIfPresent(canChangePassword, forKey: "can_change_password")
    try values.encodeIfPresent(displayName, forKey: "display_name")
    try values.encode(email, forKey: "email")
    try values.encodeIfPresent(isInvitePending, forKey: "invite_pending")
    try values.encodeIfPresent(name, forKey: "name")
  }
}
