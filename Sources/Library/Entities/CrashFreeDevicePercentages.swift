// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct CrashFreeDevicePercentages: Codable {
  /// Average percentage.
  public var averagePercentage: Double?
  /// The crash-free percentage per day.
  public var dailyPercentages: [DailyPercentage]?

  public struct DailyPercentage: Codable {
    /// The ISO 8601 datetime.
    public var datetime: String?
    /// Percentage of the object.
    public var percentage: Double?

    public init(datetime: String? = nil, percentage: Double? = nil) {
      self.datetime = datetime
      self.percentage = percentage
    }

    public init(from decoder: Decoder) throws {
      let values = try decoder.container(keyedBy: StringCodingKey.self)
      self.datetime = try values.decodeIfPresent(String.self, forKey: "datetime")
      self.percentage = try values.decodeIfPresent(Double.self, forKey: "percentage")
    }

    public func encode(to encoder: Encoder) throws {
      var values = encoder.container(keyedBy: StringCodingKey.self)
      try values.encodeIfPresent(datetime, forKey: "datetime")
      try values.encodeIfPresent(percentage, forKey: "percentage")
    }
  }

  public init(averagePercentage: Double? = nil, dailyPercentages: [DailyPercentage]? = nil) {
    self.averagePercentage = averagePercentage
    self.dailyPercentages = dailyPercentages
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.averagePercentage = try values.decodeIfPresent(Double.self, forKey: "average_percentage")
    self.dailyPercentages = try values.decodeIfPresent([DailyPercentage].self, forKey: "daily_percentages")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(averagePercentage, forKey: "average_percentage")
    try values.encodeIfPresent(dailyPercentages, forKey: "daily_percentages")
  }
}
