// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Audience definition.
public struct AudienceDefinition: Codable {
  /// Audience description.
  public var description: String?
  /// Audience definition in OData format.
  public var definition: String
  public var isEnabled: Bool
  /// Custom properties used in the definition.
  public var customProperties: [String: CustomProperty]?

  public enum CustomProperty: String, Codable, CaseIterable {
    case string
    case number
    case boolean
    case dateTime = "date_time"
  }

  public init(description: String? = nil, definition: String, isEnabled: Bool? = nil, customProperties: [String: CustomProperty]? = nil) {
    self.description = description
    self.definition = definition
    self.isEnabled = isEnabled ?? true
    self.customProperties = customProperties
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.description = try values.decodeIfPresent(String.self, forKey: "description")
    self.definition = try values.decode(String.self, forKey: "definition")
    self.isEnabled = try values.decodeIfPresent(Bool.self, forKey: "enabled") ?? true
    self.customProperties = try values.decodeIfPresent([String: CustomProperty].self, forKey: "custom_properties")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(description, forKey: "description")
    try values.encode(definition, forKey: "definition")
    try values.encodeIfPresent(isEnabled, forKey: "enabled")
    try values.encodeIfPresent(customProperties, forKey: "custom_properties")
  }
}
