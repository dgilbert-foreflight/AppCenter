// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Envelope for messages sent to actors
public struct MessageEnvelope: Codable {
  /// Unique id of the message
  public var messageID: String?
  /// Type of the message
  public var messageType: String?
  /// Body of the message
  public var message: [String: AnyJSON]?

  public init(messageID: String? = nil, messageType: String? = nil, message: [String: AnyJSON]? = nil) {
    self.messageID = messageID
    self.messageType = messageType
    self.message = message
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.messageID = try values.decodeIfPresent(String.self, forKey: "messageId")
    self.messageType = try values.decodeIfPresent(String.self, forKey: "messageType")
    self.message = try values.decodeIfPresent([String: AnyJSON].self, forKey: "message")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(messageID, forKey: "messageId")
    try values.encodeIfPresent(messageType, forKey: "messageType")
    try values.encodeIfPresent(message, forKey: "message")
  }
}
