// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Options required to start the test run
public struct TestCloudStartTestRunOptions: Codable {
  /// Test framework used by tests.
  public var testFramework: String
  /// Device selection string.
  public var deviceSelection: String
  /// Language that should be used to run tests.
  public var language: String?
  /// Locale that should be used to run tests.
  public var locale: String?
  /// Name of the test series.
  public var testSeries: String?
  /// A JSON dictionary with additional test parameters
  public var testParameters: [String: AnyJSON]?

  public init(testFramework: String, deviceSelection: String, language: String? = nil, locale: String? = nil, testSeries: String? = nil, testParameters: [String: AnyJSON]? = nil) {
    self.testFramework = testFramework
    self.deviceSelection = deviceSelection
    self.language = language
    self.locale = locale
    self.testSeries = testSeries
    self.testParameters = testParameters
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.testFramework = try values.decode(String.self, forKey: "test_framework")
    self.deviceSelection = try values.decode(String.self, forKey: "device_selection")
    self.language = try values.decodeIfPresent(String.self, forKey: "language")
    self.locale = try values.decodeIfPresent(String.self, forKey: "locale")
    self.testSeries = try values.decodeIfPresent(String.self, forKey: "test_series")
    self.testParameters = try values.decodeIfPresent([String: AnyJSON].self, forKey: "test_parameters")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encode(testFramework, forKey: "test_framework")
    try values.encode(deviceSelection, forKey: "device_selection")
    try values.encodeIfPresent(language, forKey: "language")
    try values.encodeIfPresent(locale, forKey: "locale")
    try values.encodeIfPresent(testSeries, forKey: "test_series")
    try values.encodeIfPresent(testParameters, forKey: "test_parameters")
  }
}
