// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct BillingInformationSearchResult: Codable {
  /// The Account ID
  public var accountID: String?
  /// The Account Name
  public var accountName: String?
  /// The Billing Internal Account ID
  public var billingInternalAccountID: String?
  /// The ID of the Build Billing Plan
  public var buildPlan: String?
  /// The ID of the Test Billing Plan
  public var testPlan: String?

  public init(accountID: String? = nil, accountName: String? = nil, billingInternalAccountID: String? = nil, buildPlan: String? = nil, testPlan: String? = nil) {
    self.accountID = accountID
    self.accountName = accountName
    self.billingInternalAccountID = billingInternalAccountID
    self.buildPlan = buildPlan
    self.testPlan = testPlan
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.accountID = try values.decodeIfPresent(String.self, forKey: "accountId")
    self.accountName = try values.decodeIfPresent(String.self, forKey: "accountName")
    self.billingInternalAccountID = try values.decodeIfPresent(String.self, forKey: "billingInternalAccountId")
    self.buildPlan = try values.decodeIfPresent(String.self, forKey: "buildPlan")
    self.testPlan = try values.decodeIfPresent(String.self, forKey: "testPlan")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encodeIfPresent(accountID, forKey: "accountId")
    try values.encodeIfPresent(accountName, forKey: "accountName")
    try values.encodeIfPresent(billingInternalAccountID, forKey: "billingInternalAccountId")
    try values.encodeIfPresent(buildPlan, forKey: "buildPlan")
    try values.encodeIfPresent(testPlan, forKey: "testPlan")
  }
}
