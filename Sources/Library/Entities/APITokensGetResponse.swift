// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct APITokensGetResponse: Codable, Identifiable {
  /// The unique id (UUID) of the api token
  public var id: String
  /// The description of the token
  public var description: String?
  /// The scope for this token.
  public var scope: [ScopeItem]?
  /// The creation time
  public var createdAt: String

  public enum ScopeItem: String, Codable, CaseIterable {
    case all
    case viewer
  }

  public init(id: String, description: String? = nil, scope: [ScopeItem]? = nil, createdAt: String) {
    self.id = id
    self.description = description
    self.scope = scope
    self.createdAt = createdAt
  }

  public init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: StringCodingKey.self)
    self.id = try values.decode(String.self, forKey: "id")
    self.description = try values.decodeIfPresent(String.self, forKey: "description")
    self.scope = try values.decodeIfPresent([ScopeItem].self, forKey: "scope")
    self.createdAt = try values.decode(String.self, forKey: "created_at")
  }

  public func encode(to encoder: Encoder) throws {
    var values = encoder.container(keyedBy: StringCodingKey.self)
    try values.encode(id, forKey: "id")
    try values.encodeIfPresent(description, forKey: "description")
    try values.encodeIfPresent(scope, forKey: "scope")
    try values.encode(createdAt, forKey: "created_at")
  }
}
